@page "/ContractConfig"

<div class="row">
    <div class="col-5 mx-auto">
        <EditForm Model="@config" OnValidSubmit="AddContractConfig">
            <DataAnnotationsValidator />
            <h3>Add Configuration</h3>
            <div class="row p-3">
                <label class="col-sm-3 col-form-label">Contract ID</label>
                <InputSelect @bind-Value="config.ContractId" class="col-sm-5">
                    <option>----Select Contract----</option>
                    @foreach (var contract in contracts)
                    {
                        <option value="@contract.ContractId">@contract.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(()=>config.ContractId)" class="col-4"/>
            </div>
            <div class="row p-3">
                <label class="col-sm-3 col-form-label">Code</label>
                <InputText @bind-Value="config.Code" class="col-sm-5" />
                <ValidationMessage For="@(()=>config.Code)" class="col-4"/>
            </div>
            <div class="row p-3">
                <label class="col-sm-3 col-form-label">Value</label>
                <InputText @bind-Value="config.Value" class="col-sm-5" />
                <ValidationMessage For="@(()=>config.Value)" class="col-4"/>
            </div>
            <div class="row p-3">
                <label class="col-sm-3 col-form-label">Description</label>
                <InputText @bind-Value="config.Description" class="col-sm-5" />
                <ValidationMessage For="@(()=>config.Description)" class="col-4"/>
            </div>
            <div class="row p-3">
                <label class="col-sm-3 col-form-label">Type</label>
                <InputSelect @bind-Value="config.DataFormatId" class="col-sm-5">
                    <option>----Select User Id----</option>
                    @foreach (var type in dataFormats)
                    {
                        <option value="@type.DataFormatId">@type.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(()=>config.DataFormatId)" class="col-4"/>
            </div>
            <div class="row py-lg-3 my-4"></div>
            <div class="row mx-auto">
                <div class="col-5"><button class="btn btn-primary px-5">Add Config</button></div>

            </div>
        </EditForm>
    </div>
    <div class="col-5 mx-auto">
        <h3>Update Configuration</h3>
        <div class="row p-3">
            <label class="col-sm-3 col-form-label">Config ID</label>
            <input type="text" class="col-sm-5" />
        </div>
        <div class="row p-3">
            <label class="col-sm-3 col-form-label">Contract ID</label>
            <input type="text" class="col-sm-5" />
        </div>
        <div class="row p-3">
            <label class="col-sm-3 col-form-label">Code</label>
            <input type="text" class="col-sm-5" />
        </div>
        <div class="row p-3">
            <label class="col-sm-3 col-form-label">Value</label>
            <input type="text" class="col-sm-5" />
        </div>
        <div class="row p-3">
            <label class="col-sm-3 col-form-label">Description</label>
            <input type="text" class="col-sm-5" />
        </div>
        <div class="row p-3">
            <label class="col-sm-3 col-form-label">Type</label>
            <input type="text" class="col-sm-5" />
        </div>
        <div class="row p-3 mx-auto">
            <div class="col-5"><button class="btn btn-primary px-5">Update Config</button></div>
            <div class="col-4"><button class="btn btn-primary px-3">Remove Config</button></div>
        </div>
    </div>
</div>
<div class="row">
</div>

@code {

    private ContractConfiguration config = new();

    private List<ContractConfiguration> configList = new();

    private List<DataFormat> dataFormats = new();

    private List<Contract> contracts = new();

    private string ContractId { set; get; }

    protected override async Task OnInitializedAsync()
    {
        dataFormats =  (await ContConfigRepositoryAPI.GetDataFormatAsync()).OrderBy(offset => offset.DataFormatId).ToList();

        contracts = KTRepositoryAPI.GetContractsAsync().ToList();
    }

    protected async Task AddContractConfig()
    {
        
    }
}
